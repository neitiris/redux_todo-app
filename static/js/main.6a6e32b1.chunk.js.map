{"version":3,"sources":["api.js","TodoList.js","App.js","store.js","index.js"],"names":["API_URL","getTodos","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","fetch","concat","sent","abrupt","json","stop","apply","this","arguments","TodoList","todos","toggleTodo","react_default","createElement","className","map","todo","key","id","type","checked","completed","onChange","title","connect","state","todosFromStore","dispatch","setTodos","payload","useEffect","then","src_TodoList","todoId","newTodos","_objectSpread","store","createStore","action","store_objectSpread","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"2OAAMA,EAAU,uCAEHC,EAAQ,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACCC,MAAK,GAAAC,OAAIf,EAAJ,WADN,cAChBS,EADgBE,EAAAK,KAAAL,EAAAM,OAAA,SAGfR,EAASS,QAHM,wBAAAP,EAAAQ,SAAAX,MAAH,yBAAAN,EAAAkB,MAAAC,KAAAC,YAAA,GCuBNC,EAtBE,SAAArB,GAAA,IAAGsB,EAAHtB,EAAGsB,MAAOC,EAAVvB,EAAUuB,WAAV,OACfC,EAAApB,EAAAqB,cAAA,OAAKC,UAAU,YACbF,EAAApB,EAAAqB,cAAA,wBAEAD,EAAApB,EAAAqB,cAAA,MAAIC,UAAU,kBACXJ,EAAMK,IAAI,SAAAC,GAAI,OACbJ,EAAApB,EAAAqB,cAAA,MAAII,IAAKD,EAAKE,GAAIJ,UAAU,kBAC1BF,EAAApB,EAAAqB,cAAA,aACED,EAAApB,EAAAqB,cAAA,SACEM,KAAK,WACLC,QAASJ,EAAKK,UACdC,SAAU,kBAAMX,EAAWK,EAAKE,OAGjCF,EAAKO,yOCXlB,IAyCeC,cAXS,SAACC,GAAD,MAAY,CAClCC,eAAgBD,EAAMf,QAGG,SAACiB,GAAD,MAAe,CACxCC,SAAU,SAAClB,GAAD,OAAWiB,EAAS,CAC5BR,KAAM,YACNU,QAASnB,OAIEc,CAzCH,SAAApC,GAAkC,IAA/BsC,EAA+BtC,EAA/BsC,eAAgBE,EAAexC,EAAfwC,SAC7BE,oBAAU,WACR3C,IACG4C,KAAK,SAAArB,GACJkB,EAASlB,MAEZ,IAYH,OACEE,EAAApB,EAAAqB,cAAA,QAAMC,UAAU,OACdF,EAAApB,EAAAqB,cAAA,iCAEAD,EAAApB,EAAAqB,cAACmB,EAAD,CACEtB,MAAOgB,EACPf,WAhBa,SAACsB,GAClB,IAAMC,EAAWR,EAAeX,IAAI,SAAAC,GAClC,OAAQiB,IAAWjB,EAAKE,GACpBF,uVADGmB,CAAA,GAEEnB,EAFF,CAEQK,WAAYL,EAAKK,cAGlCO,EAASM,4OCnBb,IAmBeE,EAFDC,YAbE,SAACZ,EAAOa,GACtB,OAAQA,EAAOnB,MACb,IAAK,YACH,4VAAOoB,CAAA,GACFd,EADL,CAEEf,MAAO4B,EAAOT,UAGlB,QACE,OAAOJ,IAbQ,CACnBf,MAAO,KCYT8B,IAASC,OAAO7B,EAAApB,EAAAqB,cANH,kBACXD,EAAApB,EAAAqB,cAAC6B,EAAA,EAAD,CAAUN,MAAOA,GACfxB,EAAApB,EAAAqB,cAAC8B,EAAD,QAIY,MAAUC,SAASC,eAAe","file":"static/js/main.6a6e32b1.chunk.js","sourcesContent":["const API_URL = 'https://jsonplaceholder.typicode.com';\n\nexport const getTodos = async() => {\n  const response = await fetch(`${API_URL}/todos`);\n\n  return response.json();\n};\n\nexport const getUser = async(userId) => {\n  const response = await fetch(`${API_URL}/users/${userId}`);\n\n  return response.json();\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoList = ({ todos, toggleTodo }) => (\n  <div className=\"TodoList\">\n    <strong>Todos:</strong>\n\n    <ul className=\"TodoList__list\">\n      {todos.map(todo => (\n        <li key={todo.id} className=\"TodoList__item\">\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={todo.completed}\n              onChange={() => toggleTodo(todo.id)}\n            />\n\n            {todo.title}\n          </label>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nexport default TodoList;\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  toggleTodo: PropTypes.func.isRequired\n};\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { getTodos } from './api';\nimport TodoList from './TodoList';\n\nconst App = ({ todosFromStore, setTodos }) => {\n  useEffect(() => {\n    getTodos()\n      .then(todos => {\n        setTodos(todos);\n      });\n  }, []);\n\n  const toggleTodo = (todoId) => {\n    const newTodos = todosFromStore.map(todo => {\n      return (todoId !== todo.id)\n        ? todo\n        : { ...todo, completed: !todo.completed };\n    });\n\n    setTodos(newTodos);\n  };\n\n  return (\n    <main className=\"App\">\n      <h1>Todo APP with Redux</h1>\n\n      <TodoList\n        todos={todosFromStore}\n        toggleTodo={toggleTodo}\n      />\n    </main>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  todosFromStore: state.todos,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setTodos: (todos) => dispatch({\n    type: 'SET_TODOS',\n    payload: todos,\n  }),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n// //\n// const [todos, setTodos] = useState([]);\n// //\n// state = {\n//   todos: []\n// };\n//\n// const todos = this.state.todos;\n//\n// const setTodos = (newTodos) => {\n//   this.setState({\n//     todos: newTodos,\n//   });\n// };\n","import { createStore } from 'redux';\n\nconst initialState = {\n  todos: [],\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_TODOS':\n      return {\n        ...state,\n        todos: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer, initialState);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './styles.css';\n\nimport App from './App';\nimport store from './store';\n\nconst Root = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}